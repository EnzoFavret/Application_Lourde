using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Drawing;
using System.Windows.Forms;
using System.Data.SqlClient;
using static ToDoListV2.Program;
using System.Diagnostics;
using static System.Net.Mime.MediaTypeNames;
using Application = System.Windows.Forms.Application;

namespace ToDoListV2
{
    internal class Program
    {
        [STAThread]
        private static void Main()
        {
            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            Application.Run(new Fenetre());
            
        }
        //Création de la Class Fenetre qui sera l'interface graphique de l'app
        public class Fenetre : Form
        {
            private Button boutonFermer;
            private TextBox textBoxNom;
            private TextBox textBoxDescription;
            private DateTimePicker dateTimePickerDate;
            private ListBox listBoxTaches;

            // Création de la chaîne de connexion à la base de données
            private string connectionString = "Data Source=localhost\\SQLEXPRESS;Initial Catalog=Lourd;User Id=Lourd;Password=Lourd;";

            //Constructeur pour la fenetre, ici on appelle la méthode IntializeComponenet qui va donner les caractèristiques de la fenetre lors du démarrage
            public Fenetre()
            {
                InitializeComponent();
                AfficherTaches();
            }

            //Méthode qui va donner les différentes caractèristiques de la fenetre lors du démarrage
            private void InitializeComponent()
            {
                //SuspendLayout() met en pause l'affichage de la fenetre
                SuspendLayout();
                this.Text = "To-Do-List";
                this.Width = 425;
                this.Height = 460;

                // Ajout d'un Label pour le champ "Nom"
                Label labelNom = new Label();
                labelNom.Text = "Nom :";
                labelNom.Location = new System.Drawing.Point(20, 20);
                this.Controls.Add(labelNom);

                // Ajout d'un TextBox pour saisir le nom de la tâche à faire
                textBoxNom = new TextBox();
                textBoxNom.Location = new System.Drawing.Point(150, 20);
                textBoxNom.Width = 200;
                this.Controls.Add(textBoxNom);

                // Ajout d'un Label pour le champ "Description"
                Label labelDescription = new Label();
                labelDescription.Text = "Description :";
                labelDescription.Location = new System.Drawing.Point(20, 60);
                this.Controls.Add(labelDescription);

                // Ajout d'un TextBox pour saisir la description de la tâche à faire
                textBoxDescription = new TextBox();
                textBoxDescription.Location = new System.Drawing.Point(150, 60);
                textBoxDescription.Width = 200;
                this.Controls.Add(textBoxDescription);

                // Ajout d'un Label pour le champ "Date"
                Label labelDate = new Label();
                labelDate.Text = "Date :";
                labelDate.Location = new System.Drawing.Point(20, 100);
                this.Controls.Add(labelDate);

                // Ajout d'un DateTimePicker pour saisir la date de la tâche à faire
                dateTimePickerDate = new DateTimePicker();
                dateTimePickerDate.Location = new System.Drawing.Point(150, 100);
                this.Controls.Add(dateTimePickerDate);


                // Ajout d'un bouton "Ajouter" pour ajouter une tâche à la liste 'ListBoxTache', on ajoute le trigger quand cliqué ainsi que sa position sur la fenetre
                Button boutonAjouter = new Button();
                boutonAjouter.Text = "Ajouter";
                boutonAjouter.Location = new System.Drawing.Point(150, 140);
                boutonAjouter.Click += new EventHandler(boutonAjouter_Click);
                this.Controls.Add(boutonAjouter);

                // Ajout d'une ListBox pour afficher la liste des tâches à faire, la seconde ligne définit la limite de la box
                listBoxTaches = new ListBox();
                //listBoxTaches.Location = new System.Drawing.Point(20, 140); Position Orignal
                listBoxTaches.Location = new System.Drawing.Point(20,180) ;
                listBoxTaches.Width = 360;
                listBoxTaches.Height = 190;
                this.Controls.Add(listBoxTaches);

                // Ajout d'un bouton "Supprimer" pour supprimer la tâche sélectionnée dans la liste, ainsi que sa position et son trigger
                Button boutonSupprimer = new Button();
                boutonSupprimer.Text = "Supprimer";
                boutonSupprimer.Location = new System.Drawing.Point(240, 380);
                boutonSupprimer.Click += new EventHandler(boutonSupprimer_Click);
                this.Controls.Add(boutonSupprimer);

                // Ajout d'un bouton "Fermer" pour fermer l'application, ainsi que sa position et son trigger
                boutonFermer = new Button();
                boutonFermer.Text = "Fermer";
                boutonFermer.Location = new System.Drawing.Point(320, 380);
                boutonFermer.Click += new EventHandler(boutonFermer_Click);
                this.Controls.Add(boutonFermer);

                //ResumeLayout() réactive l'affichage de la fenetre après l'avoir mis en pause
                ResumeLayout(false);
                PerformLayout();
            }

            // Méthode déclenchée lors du clic sur le bouton "Ajouter"
            private void boutonAjouter_Click(object sender, EventArgs e)
            {
                // Récupération des données saisies dans les TextBox et le DateTimePicker
                string nom = textBoxNom.Text;
                string description = textBoxDescription.Text;
                DateTime date = dateTimePickerDate.Value;

                // Connexion à la base de données
                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    connection.Open();

                    // Création de la requête d'insertion avec les données saisies
                    string query = "INSERT INTO taches (nom, description, date) VALUES (@nom, @description, @date)";
                    using (SqlCommand command = new SqlCommand(query, connection))
                    {
                        // Ajout des paramètres pour la requête d'insertion
                        command.Parameters.AddWithValue("@nom", nom);
                        command.Parameters.AddWithValue("@description", description);
                        command.Parameters.AddWithValue("@date", date);

                        // Exécution de la requête d'insertion
                        command.ExecuteNonQuery();
                    }

                    connection.Close();
                }

                // Actualisation de la ListBox avec les tâches ajoutées
                AfficherTaches();
            }

            // Méthode déclenchée lors du clic sur le bouton "Supprimer"
            private void boutonSupprimer_Click(object sender, EventArgs e)
            {
                // Vérification si un élément est sélectionné dans la ListBox
                if (listBoxTaches.SelectedIndex != -1)
                {
                    // Récupération de l'ID de la tâche sélectionnée dans la ListBox
                    int idTache = ((Tache)listBoxTaches.SelectedItem).Id;

                    // Connexion à la base de données
                    using (SqlConnection connection = new SqlConnection(connectionString))
                    {
                        connection.Open();

                        // Création de la requête de suppression avec l'ID de la tâche sélectionnée
                        string query = "DELETE FROM taches WHERE id=@idTache";
                        using (SqlCommand command = new SqlCommand(query, connection))
                        {
                            // Ajout du paramètre pour la requête de suppression
                            command.Parameters.AddWithValue("@idTache", idTache);

                            // Exécution de la requête de suppression
                            command.ExecuteNonQuery();
                        }

                        connection.Close();
                    }

                    // Actualisation de la ListBox avec les tâches restantes
                    AfficherTaches();
                }
            }

            // Méthode déclenchée lors du clic sur le bouton "Fermer"
            private void boutonFermer_Click(object sender, EventArgs e)
            {
                // Fermeture de l'application
                Application.Exit();
            }

            // Méthode pour afficher les tâches dans la ListBox
            public void AfficherTaches()
            {
                // Connexion à la base de données
                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    connection.Open();
                    // Création de la requête de sélection pour récupérer toutes les tâches
                    string query = "SELECT * FROM taches";
                    using (SqlCommand command = new SqlCommand(query, connection))
                    {
                        using (SqlDataReader reader = command.ExecuteReader())
                        {
                            // Effacement des éléments actuels dans la ListBox
                            listBoxTaches.Items.Clear();

                            // Parcours des résultats de la requête
                            while (reader.Read())
                            {
                                // Récupération des valeurs des colonnes dans le résultat
                                int id = Convert.ToInt32(reader["id"]);
                                string nom = reader["nom"].ToString();
                                string description = reader["description"].ToString();
                                DateTime date = Convert.ToDateTime(reader["date"]);

                                // Création d'un objet Tache avec les valeurs récupérées
                                Tache tache = new Tache(id, nom, description, date);

                                // Ajout de l'objet Tache dans la ListBox
                                listBoxTaches.Items.Add(tache);
                            }
                        }
                    }

                    connection.Close();
                }
            }

            // Classe pour représenter une tâche
            public class Tache
            {
                public int Id { get; set; }
                public string Nom { get; set; }
                public string Description { get; set; }
                public DateTime Date { get; set; }

                public Tache(int id, string nom, string description, DateTime date)
                {
                    Id = id;
                    Nom = nom;
                    Description = description;
                    Date = date;
                }

                public override string ToString()
                {
                    return $"{Nom} - {Date.ToShortDateString()} - {Description}";
                }

            }
        }
    }
}
